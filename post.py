import os
import shutil
import zipfile
import requests
from flask import jsonify
import base64
data = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAIBAQEBAQIBAQECAgICAgQDAgICAgUEBAMEBgUGBgYFBgYGBwkIBgcJBwYGCAsICQoKCgoKBggLDAsKDAkKCgr/2wBDAQICAgICAgUDAwUKBwYHCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgr/wAARCACBAIcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5Q/ai/bB/bH/4KF+KLt5deufCPhFXYQWtv/rJFyev4ED8KwfhR+xT8MdHihn8T3lxqN1t3tNPHk5PY/jk/jXp+jWaWUS25uYi8Zw3k/dz1rtvDsT3EYd3zhsA/lXxuMzSWIk7H2+By1UbStc5/wANfCzwroksdtp2hxBVX5GC44rv9B8LKzBUjiUA9Klh0/eVIrotH035B9elfK4jE1vaH12FlGMLOFhthpcMLgzxKyx91q7H4fFzcrdKuA3IHtWpbadF5X7zrmr+ladB5wOO9czxM7anZenPSItl4ailaJntkfDYy38q6S08F6ZdXSLe2qqmOi1a0bTV42dM10lppsRZd/XFR9aa2D2KnpI5uT4N6VqV+RbtsXHTy81m678BraZTCiJIAOjQ16jZ6auwbOmatDTOOtdEalZx5uaxlVjSjGyjc+edY/Zvt78C2bRrcD+80PWvPfG/7FHhrxFMINQ8OpbKGx50UPWvskaYrIUePcPWq1x4b0ycqjwclq39tWjC/Pc8urThU91wsfm/8Sv+CellP58fhzziQvAkXAJ5r5p+KH7GPxJ+HkL66jPZSW8ha1urSP50bsd3av2mvfh5o81w6eR8xXiuH8Z/APQ/E9jJpmp2aPDvLYb1rpwOfOlLkqbHFXyGFWlzQ3Pj7/glh/wVx+KvwB162+C37TJlvNBcrBb6s0m50Bwoz6DjOPev2l8H+J/D/jjwzb+K/CmpRXdjcQLLFNF3QjPPv/8AWr8g/wBob/gm7YeKdLkuvDKtZzZOwxfw56N/n0rtf+CXv7X3jn9lz4hJ+yv+0PcuujbhbaPq959xScAD9P1r7bB5phK1NWPlMZlNSm3c/VaOYSIGX7rDK/Sim2j2RUQ6beJdh1EiXSdHUgYIor04ynJXWx4XN7J8p+Jun2MdjFHcW/yTlQXj966bwx9tnbe9k5fd/D9BWPbaVI5jNzb7pAuA/pXRWxttFsjdalrMVuqjMYb7xNfmilKUmkfrPLGEU2dDbi6iAa7iaMZ6tW9pGqW0ShbRvM5+Z/T2rwrxf+0XJZ3A0zw9YXF9d5wFjjyp96ox6/8AHfX1a4Ph+eyiZch0XGKTy+rXRtHGUIxtI+o7HV9AbCz3ieb/AHWq/ptzHLqCxwwqVPda+TZfh3+0hfW39o6FBc3EhG5Q0eRVSy8c/tt+ArkXGoQwukTfurZrXLGp/sWb3CWOSV47H3zotrawiOe6O0FvuevFbduj/aXksU2nbx7ivj74Qftr/FuXX4NI+JngR4VLDfL9nwMdM19sfBvxz4W+IkG23aBWEX+r24PSuWeXezdjanmcYK7IrGaXyR9r35zztrYtXsWQHzGX1DV0M3gy3aDbFZk7vmGawda8PT2kDf6Mw2/3aj6nJbG0atKu+Ylaexiwvn9qbNcWjQEwvmTPX2rm/sF9dkxQowI/vU+HTdYtG8ySPO3oa5pRxEZcsS44Wi3zGrLIMbvTrWXqjRXZ8l5dpAzilSbVL7MbLsA4zVaaF1Jjkm8w+vp7VLwc2ubqW1RirEFzNHKq2qzZ8s5IryD9pz9nLwv8Y/B91cW9zFaalb27vbTH742lSce3Ir1x7Ilv3ezd/tdcVma1YWoljaSOIsxAJ+hzXpZfUqUNzy8ZSp1aTiib/glZ+1D4z8beF5P2dvi7byQ6x4b81I72XrPCp+Qj2wDRWP4T8Ky6F8V/+Eu8MXK2s13C6Tyr3G04FFfdYbG/uUfmuJwP75nyvfXd5HCEs7ZWY8b+49qs6F8MovEkqnXJZdr8lW6VueD/AAr5kiXV1HuQHFejWml2xWJ1g4HAr4CdeUJNxP1mlRpuKUtzgbb4UeE/B8y3VtocU/GQVjyQa6Gx1dNGgabUkt4LRxjdfHYq+2Kv+OvDF7rNoU0id4JUHDJ1ryLVf2UtQ+Jc82n+M/HWoRRTHEf7xwM/8B4qqONqup7xc8LQcWe0eGfjj8G/CWG1X4gWMADfKytmND617P4G+L37L/xLht7afxJoOpXAGFuF2b2b/gX1/WvlCX/gmp4Xu/h/L4R0HVILi7uIyqTXUzZU46/NzivKLz/glZ8YdBe30/wp4xtLFbU/6Xd2k3O7Jwfr0r24Tj7PmZ4qjUjJxWx+i/i34A/CrxV5lzY29sJXTK7due/TbxXnuneAJ/hJqMmoabCQhbGTXk37JGu/Hj4J+NovhP8AF8ajqUfypbao7ZRk7D9Cfxr6H+PXiuwjtivlBCyBiB3PTP6VyVa9OGqNIxm3Znp3wx+KNnc2NrBd/vHKAE+ntXdXlnomtFGmhQBhnLV8jfDT4jW1vq8BEuEBAP1r6Hl+IemtpMLWz5JQE/Wuf69Bbl/VX8Rf8QWHhbQ3O2SJ93Qe9eN/FP8AaMk8BTSR2/g6O/iVcBV69TXUT66PEV+8D9M4qDUvBnhiW2aTU7ZHJGMydAKaqUZu4ewmk7Hy54o/4KdWvh2/ntrj4U3caqdrMkeQKdo37ffw88UaWbxNNns5M5ZJVxzgc/59K9qv/wBnf4JeKrtrLWbG0xKM/u+veuO8df8ABPz9nsabL9hsrgNJ91kkwtdtPD0Jas8v2teEmkZ/w8/ak8La9fJbyXcTLMflI7GvRXZJLqK+2q8VwPkK+lfOPjD9ka+8CafHeeAkkYw8ghs9P8iu8/Z7+K2oas83gjxWhW6s0AjDf59c1hXo4WCujspVcVU0Z2niXVLnQdQaaBnQq3yBffiirPiSzlvrlJZvvAEfyorahiJxppRPOxODpyrNy3PKfDd3apaiOMcMuTXZ+F9Pt9Uj2PJtHpXlHhC5acqYTwRzXrPgWCdwq+or5apU5ZNH2D+FHe+FfA2iTFJZl344Jrs7bwH4ZkiDJAnB53Vj+C9GuZcBByRivRtA+Gl9LELq4kwpFFOUpzSRPu2dznofDHh118iO3iLAY2+1WNc8JaLZ2EEdpp0aeZ/rTXTHRtE0Mt9qnTrlt3pXLeP72e10WXUW1CJLGIlgP9mvUrwrRpJnPRp06s+WJ57468S+HPhxIbvUTEWDfuf93t+ua8K8e/EXUvHmrMY5FWBX+QL6VH8XPiRH4q1OW3tpFmgRiqMvsTx+tcLpJ1a81T7LbwPtzxtry3iK1eXKes8JCDTZ6v8ADIiyu3lC7y3JPvxXrsWuSWdvavEuCyEEVxXwu8EXZsYRewS5J3L+7z2FdlrGgXNsiG7UrGpwoZcVm1UhK8hN0WuU1TPcaJoDa9odl9rvNpYWv9+vFfFXiT43eK7mUXQfRrdnbMS84zgYxXr3hm4W21MRLJwei+tdPrXg6LxEYhJb7eAQ1d2GqRcveOKrQpz0R+eX7SfjT9sb4ceO5bbwStxPp8cMZMsdlgng/wBMV594U/4Kd/tR/D7xFGnxM0WZtIgkCSy3tvgBfQV+oV74RvbaF7VxDLEU2YmjzXJeLfgX4B8VaDNovinwLpt5b3C7JJVh5X/P9a9aGLpqPKjz5YG8jmv2ffj54a+LXhiPxToUUjJfoC6mH5QSBnHtzVH4kfCL7P8AEPT/ABv4YjW3WKZWvQi4zySf51p+Bv2ZdB+FabvBl75dguGMEbbFTnpj6AV12sGKeE2czRG3BBJ3Z4wP8K45V+erymqp+ygzG1wXHiK6a5sJfs8fAB/ve9FdJ4I8Ev421uDTYbdWt4UYxsv+6eKK+nwuX/uUfH4vGKNdo+UvAazWJhL9DzXtXgq4t0Ye4zXjPgd02xRp0Br17wPp0t3epCm/DqB8tfC4r/eD7lu0Ue0eA7uHzoXcoEB5Zu1elat8QbKy0oW9jfxE7OfY14frt7P4P0ILEGaQJ8qt/OvLr74keIY70vc6rkbshPQeldtDmULrcl4f2iufQV/rTapcF9T1RUXDAFe4OK+RP29v2rdZ8KeO7D4NaFcNbwXCrvuexJyMfkBXXz/F3UdVdrQsxRTgntmue8WeG/B/xBMUnjfQ7e6lhYC2b+IAcgfmTWjx0qqtPY2w2GlSXMtzi9B8e/DnwZ4Xh1vxzqZKvFl/Jt924+ua5K2/bv8AgLYeKEstPW4IDhEeaLZ39K910T4OeGL8pDNoqPGEBCSdAPSp/Ev/AATp+FPxf0aVtPtrfTrmM7xJDHn5jShSpzmmtzOvCpUVmeqfBr9ofwWPDtjrxgiuIZVGFEeccCvS/EvxV+Hni3R/MsLKBj5YO3bghhzivmbwj+xf8RvhzpUOiW/isvbWjYjac7FZePlA9f8AGuE/ad/ZG+IOsaEviHwP8RtXstUtwXFpp19tEmOdu3v9a7cThFKFhU4/ZPqS3V726g1xbU20cpypPcV2cOsaTCq2877ZWUEe49a+f/2N9X+I8nw10/w58QNKvUntRiWW8PzHGOT+terfFG2jtUiv9Nusvt/5Z9B7V5EqXK7GqoSlpE6fVLtmt8RzoUI4VvWqGnnW2zE9uoiLZ+Wsb4ZeIxq0MVvqkzFg23a3pXuMvhfRn0GK4hTa5hGKcKXvHPNRg7Pc8yvNMtJY/s80HyFcn61xnirRoIGENumFcEYru/EMEtlc/J03VyHiLfHcedKMgAsFq5Qca8WOX8Jnon7JHhvZ9on/AOeaFf5f40VzX7MPxhvR4nuPC9xYYjeNmU/T/wDVRX6NhP8Ad4n5njf95kfGHhSxNokMv+0P6V9DfCNLVL21uLnoQAK8B0E4tVL/AHsZH0r1P4XeLHs7qGB5NuDX55iXyzufpMt0e4+PNCtZbQrIj+TOmGZfSvjr9qzXm/Z8C+IJ/Dl1qWnysWZo+kSnPP6V9dy+K4r2yWGSf+CvP/iXDp/iTQptF8QWUN3bSZ/dyW+4/nWuGrU4yvPYD4Q8J/t+fD69eS0ttOu3iLgAeXkhs9K9r8IftSaDDBHqV74TvfJmIWGSa1zzgf41KP2cPhRoOovq2j+CrYMZfMY/Z8c+n6V9D+FvjP8ADu/8J6d4G1j4XQtb2hXc3k8EivTUMLXj7onUlSXNE4Lwl+0n8L2u4YNWkjgaYgMDFs/SvpH4X+PPgxrVmYdL8UQRTGP7zfypui/Db9l34peIbLWb74W6Swwq+U8PzMR/+url7+w/+z/r/jmWa0kfR4HTJg0+XyhGMn9a6qOXUoNTOOpmFSLvI2r6X4dHTh9t1eGVyx2uvcVwHirRtK803Gj3MRUtkVNq3/BOnwbd6pcPpHxe11LaPcbVZtW3qHx6flXk/wAaP2Z/2hfgX8Pr7xv4X8ff2pHbRO8dtKm4nHv9BXo1cPS5SYYz3uY7Bm1pZ2gjcnBz+76Ypb3xDFe6bNpN4BuVCfm+9Xwf8Fv+CvH9meLW8IfFjQFs7i1nMclyq45zj/Gvsrwj468L/FXR4fGXhu4+2LcKrj27/wBa+exGApe05j0aOKlH30UvBPjgeHvFa2s+7yxJkbvr/wDWr6Is/ivFfaSkcX3dmK+fvGfhmS81qG+jTfISo8n0FdvZySaFpkRli2EoPlrxq9WMZckNyakZY580tjX8Y+JJJ3EiHg1y1mZte1+G0eT5WYjbUt/fvcIPKk2vISYx7gV1/wAEPAMl/rdnr1w29p3xMPavRwNGpipqT6F1q1HDYVo774D/AAls9KvpNWmsvvRkbqK9Se1W2P8AZtpbeTGoBWT+lFfo+Go8tFI/JMdXqSxUnHY/IvwH4qit4zLe7NmMfNXVad49gtb2O4t9u3j7tfONr4yure7KC4yqnmtK3+I9ykwEE/QAmvhKmXc87n6RTxnNCx9n+F/HUmrJHskwMYxWtr11I1uFEz7yM/L0xXz38Hvi3p955dpNf7Zemz16c1734avIdW0iSNmy7JlT7Vw1sNyJo78PVjVkoyKtkgddqW4nYn5lk610XhXwnozStNLpa2bHksvf3rEtoJtKtw8/XzOPpXp/wu01/EBRvsyOoOMt9B/jWeCnKM+VHZXVOmrov+EvDulu4tre5MbMvE6yYK+9ar6d4iFwdM0LxJMk0Z4vJF3Bh9a1L7wZawEf6CAwP3k61kS6NdQyNFb39zH+8yFbp2r6GFecKd2fO1oRnWuyXWo/iraWm9/EHm7E5SNcBj/e/wA+leX+N/Ffxj160n8OX2oytYzKUlXy+x4IzXqk2o6lYxCC61UEbOFrCvtL1fVJCVmwhPFYPH8ruegqFKUUj5x8Bf8ABN/9mi58VzeM9e8BC4v7mQtO8t31752/XNe3aB8FtB8KSRaT4O0+3sbSJR5YjGAP84rrtE0S4tEJmnzg8rUV9rmk6NBLJcRosm47d1ebVxXO2zSkqcabiiG4sNL8KwG4vRFNOV+U+3+c1x9/qBuLprnULpWUk+Qi9vajV/FX9rF5rkKQpwir6f5Nc1eX+oeI7lNBt7B1d2Hlsv1rxaGBliMRzRFKt9Vw7Rc0nT28SeIjYxu8MpfCsvc19VfBXwHF4M0dby6jZp2TczN34Fc58DfgB4f8NaDHrmuRhrxkVlMnXdxXq5kOBEWVNoAwtfpGU5ZUpU05HwmZZ19Ym4E9zJPcW6OyYDLkD8aKjSLaN2/dz1or6bl5dD5yb55XPwBvIVtwZYPvA4p2mmF2dpJduU5HvVKy1KC4P2Pz/erB22gzG+QWr4GT94/RqRJpcuueGNVGsadd/MBujX15r6D+AP7VujNdpo3i2REmI2kt1zxXgdzH51uD6rWO9p9mvknSNw6Hcsi9qznHmjY9Sk3GF0fpF4da01OE3v2lZbaZd6MvYeletfCHxTpfh9AibNmP4q/N/wCE37VHjHwZOmn3Nw1xABtAbsK988M/tv8Aw2Wy8nXJ2WYD8AfSuGUOWVxznUkrM+8LfxRoF4wk8yLcw+761FqmnaZcwtKqKhYcFa+M9A/bQ8MS3IePWImh2/LGJMcetej+HP2s/BGsQRwJ4ig3f3Gm6VqleNjy5uSndHr11p1ijmOWXzieQvpVcWstg6y3V/th3cR1wi/tI+D9OUyTajZ4x95pq5Dxl+2H8NtLbfPdLdM33Ut2yB/9euSpg+bU76WMnCFpHrXizXLKygaa2mw+3j6V5R4q8RQ3Mov5rviNuY/759K8x8S/tQyeIZmWytpVt2Pyj0rKHxO/t2SDT7K3kNw8gESnpu9aiOD95GU613zHpGq695jpqKxeWrYCwDrmvav2bPgpd63qkXjTxFBJCgbdFHL1ZcAg/qfypf2b/wBlQ3Vrb+PPiLfJO5USQWQ6DgEE/jn8q+g7UWqJHCLeOJI12qkXYCvscvylUKakfMY3OK1ebpvYlm2yuot/ljgUYT196tDULWdQTb4bFV7r7FtXyenf61Omzy12dMV9S1yUkj46VL98xU+/93HtRRRWR0Rlyqx/O1oH/H6frW5L/rB9KKK+Dj8R+gR2L+n9B9Kral1P0ooqftHoYP4TNtP+P0/7lR3f+uP1FFFc0/iOit8BoaF99frXdeAv9dJ/vf0FFFEdzkXxHU6j/q1/3aj0b/j+H0oorWO45fCbqf6r/gf+Fdj8Jv8AkbrP/ron86KK0XxR9Tmrfwmfp38Pf+RWsf8Ar1H/AKCK0dL/AOPX/gZoor7qj/AifEVv4rLPb8asR9R/u0UV31P4B5L/AIwg6n60UUVyGp//2Q=='
mystr = {
    'facebase64': data,
        }
url = 'http://127.0.0.1:5000/data'
r = requests.post(url, data=mystr)
print(r.status_code)



